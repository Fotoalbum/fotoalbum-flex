<?xml version="1.0" encoding="utf-8"?>
<s:SparkButtonSkin xmlns:fx="http://ns.adobe.com/mxml/2009" 
                   xmlns:s="library://ns.adobe.com/flex/spark" 
                   xmlns:fb="http://ns.adobe.com/flashbuilder/2009"
                   minWidth="73" minHeight="73" 
                   alpha.disabledStates="0.5">
    
    <!-- host component -->
    <fx:Metadata>
    <![CDATA[ 
        /** 
         * @copy spark.skins.spark.ApplicationSkin#hostComponent
         */
        [HostComponent("spark.components.ToggleButton")]
    ]]>
    </fx:Metadata>
    
    <fx:Script fb:purpose="styling">
        /* Define the skin elements that should not be colorized. 
           For toggle button, the graphics are colorized but the label is not. */
        static private const exclusions:Array = ["labelDisplay"];

        /**
         * @private
         */    
        override public function get colorizeExclusions():Array {return exclusions;}
        
        /**
         * @private
         */
        override protected function initializationComplete():void
        {
            useChromeColor = true;
            super.initializationComplete();
			
			if (this.parent["uid"].toString() != "") {
				Label(labelDisplay).setStyle("fontFamily", this.parent["uid"].toString());
				
				Label(labelText).text = this.parent["toolTip"];
				
			}
	    }
        
        /**
         * @private
         */
        override protected function updateDisplayList(unscaledWidth:Number, unscaledHeight:Number) : void
        {
            super.updateDisplayList(unscaledWidth, unscaledHeight);
        }
        
    </fx:Script>
	
	<fx:Script>
		<![CDATA[
			import classes.Singleton;
			[Bindable] public var singleton:Singleton = Singleton.getInstance();
		]]>
	</fx:Script>
    
    <!-- states -->
    <s:states>
        <s:State name="up" />
        <s:State name="over" stateGroups="overStates" />
        <s:State name="down" stateGroups="downStates" />
        <s:State name="disabled" stateGroups="disabledStates" />
        <s:State name="upAndSelected" stateGroups="selectedStates, selectedUpStates" />
        <s:State name="overAndSelected" stateGroups="overStates, selectedStates" />
        <s:State name="downAndSelected" stateGroups="downStates, selectedStates" />
        <s:State name="disabledAndSelected" stateGroups="selectedUpStates, disabledStates, selectedStates" />
    </s:states>
    
	<s:Rect left="0" right="0" top="0" bottom="0">
		<s:fill>
			<s:SolidColor color="{singleton.baseColor}"
						  color.over="{singleton.overColor}"
						  color.down="{singleton.overColor}"
						  color.upAndSelected="{singleton.overColor}"
						  color.overAndSelected="{singleton.overColor}"
						  color.downAndSelected="{singleton.overColor}"
						  color.disabledAndSelected="{singleton.overColor}" />
		</s:fill>
	</s:Rect>
	
	<s:Line xFrom="0" xTo="73" bottom="0">
		<s:stroke>
			<s:SolidColorStroke color="#C8C8C8" weight="1" caps="square"/>
		</s:stroke>
	</s:Line>
	
	<s:Label id="labelDisplay"
			 textAlign="center"
			 color="0x4E4E4E"
			 color.over="0xFFFFFF"
			 color.down="0xFFFFFF"
			 color.upAndSelected="0xFFFFFF"
			 color.overAndSelected="0xFFFFFF"
			 color.downAndSelected="0xFFFFFF"
			 color.disabledAndSelected="0xFFFFFF"
			 horizontalCenter="0"
			 verticalCenter="-8"
			 left="1" right="1">
	</s:Label>
	
	<s:Label id="labelText"
			 textAlign="center"
			 fontSize="11"
			 color="0x4E4E4E"
			 color.over="0xFFFFFF"
			 color.down="0xFFFFFF"
			 color.upAndSelected="0xFFFFFF"
			 color.overAndSelected="0xFFFFFF"
			 color.downAndSelected="0xFFFFFF"
			 color.disabledAndSelected="0xFFFFFF"
			 horizontalCenter="0"
			 bottom="6"
			 left="1" right="1">
	</s:Label>
    
</s:SparkButtonSkin>
