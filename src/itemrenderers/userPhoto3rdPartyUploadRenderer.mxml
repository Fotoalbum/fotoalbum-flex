<?xml version="1.0" encoding="utf-8"?>
<s:ItemRenderer xmlns:fx="http://ns.adobe.com/mxml/2009" 
				xmlns:s="library://ns.adobe.com/flex/spark" 
				xmlns:mx="library://ns.adobe.com/flex/mx" 
				autoDrawBackground="false"
				filters="{dropShadow}"
				mouseUp="_mouseUpHandler(event)"
				width="100" height="100">
	
	<fx:Declarations>
		<s:Fade id="showEff" alphaFrom="0.0" alphaTo="1.0" />
		<s:DropShadowFilter id="dropShadow" distance="2" color="0" alpha=".6" angle="45" blurX="5" blurY="5" />
	</fx:Declarations>
	
	<fx:Script>
		<![CDATA[
			import classes.Singleton;
			import classes.photoclass;
			
			import events.selectPhotoEvent;
			
			import fox.photo.ExifExtractor;
			import fox.photo.jpeg.Exif;
			
			import mx.collections.ArrayCollection;
			import mx.collections.XMLListCollection;
			import mx.controls.Alert;
			import mx.controls.Image;
			import mx.core.FlexGlobals;
			import mx.graphics.BitmapScaleMode;
			import mx.graphics.BitmapSmoothingQuality;
			
			import org.osmf.layout.ScaleMode;
			
			import spark.components.Image;
			[Bindable] public var singleton:Singleton = Singleton.getInstance();
			override public function set data(value:Object):void {
				
				super.data = value; // set the Item Renderer's data object
				
				_creationCompleteHandler();
				
			}
			
			public function _creationCompleteHandler():void
			{
				
				spriteSelection.graphics.clear();
			
				if (data) {
					
					if (data.@selectedforupload.toString() == "true") {
						spriteSelection.graphics.beginFill(0x58595B, .6);
						spriteSelection.graphics.drawRect(0, 0, this.width, this.height);
						spriteSelection.graphics.endFill();
						labelDate.setStyle("color", 0xFFFFFF);
					} else {
						spriteSelection.graphics.beginFill(0xFFFFFF, 1);
						spriteSelection.graphics.drawRect(0, 0, this.width, this.height);
						spriteSelection.graphics.endFill();
						labelDate.setStyle("color", 0x000000);
					}
					
					if (data.@thumb_url) {
						
						var request:URLRequest = new URLRequest(data.@thumb_url);
						var context:LoaderContext = new LoaderContext();
						context.checkPolicyFile = true;
						if (Capabilities.isDebugger == false) {
							context.securityDomain = SecurityDomain.currentDomain;
							context.applicationDomain = ApplicationDomain.currentDomain;
						}
						
						var loader:Loader = new Loader();
						loader.contentLoaderInfo.addEventListener(Event.COMPLETE, onLoadComplete);
						loader.contentLoaderInfo.addEventListener(IOErrorEvent.IO_ERROR, onError);
						loader.load(request, context);
						
					}
				}
			}
			
			private function onLoadComplete(e:Event):void 
			{
				
				img.source = e.target.content.bitmapData;
				
			}
			
			private function onError(e:Event):void {
				trace(e);
			}
			
			protected function _mouseUpHandler(event:MouseEvent):void
			{
				
				//Select this file
				if (data.@selectedforupload.toString() == "true") {
					data.@selectedforupload = "false";
				} else {
					data.@selectedforupload = "true";
				}
			
				spriteSelection.graphics.clear();
				
				if (!singleton.userphotosforupload) {
					singleton.userphotosforupload = new ArrayCollection();
				}
				
				if (data.@selectedforupload.toString() == "true") {
					
					spriteSelection.graphics.beginFill(0x58595B, .6);
					spriteSelection.graphics.drawRect(0, 0, this.width, this.height);
					spriteSelection.graphics.endFill();
					labelDate.setStyle("color", 0xFFFFFF);
					
					//Add the photo to the selection
					var selected:Object = new Object();
					selected.id = data.@id;
					selected.source = img.bitmapData.clone();
					selected.origin = data.@origin;
					selected.origin_type = data.@origin_type;
					singleton.userphotosforupload.addItem(selected);
					singleton.userphotosforupload.refresh();
					
				} else {
					
					spriteSelection.graphics.beginFill(0xFFFFFF, 1);
					spriteSelection.graphics.drawRect(0, 0, this.width, this.height);
					spriteSelection.graphics.endFill();
					labelDate.setStyle("color", 0x000000);
					
					//Remove the photo from the selection
					for (var x:int=0; x < singleton.userphotosforupload.length; x++) {
						if (singleton.userphotosforupload.getItemAt(x).id == data.@id) {
							singleton.userphotosforupload.removeItemAt(x);
						}
					}
					singleton.userphotosforupload.refresh();
				}
				
				FlexGlobals.topLevelApplication.dispatchEvent(new selectPhotoEvent(selectPhotoEvent.SELECTPHOTOFORIMPORT, data.@id, data.@selectedforupload.toString() == "true"));
				
			}
			
		]]>
	</fx:Script>
	
	<s:SpriteVisualElement id="spriteSelection" width="100%" height="100%" />
		
	<s:SWFLoader source="@Embed('assets/icons/loading_img.swf')" 
				 width="66" height="68" autoLoad="true" verticalCenter="0" horizontalCenter="0" />
	
	<s:Image id="img" width="66" height="68" cacheAsBitmap="true"
				   horizontalAlign="center" horizontalCenter="0"
				   verticalCenter="0"
				   verticalAlign="middle" top="2"/>
	
	<s:Label id="labelDate" bottom="2" width="100%" height="18" color="0" fontSize="9"
			 maxDisplayedLines="1" textAlign="center" verticalAlign="bottom"/>
	
	<s:Label id="labelRot" bottom="2" width="100%" height="18" color="0" fontSize="9"
			 maxDisplayedLines="1" textAlign="center" verticalAlign="bottom"/>
	
</s:ItemRenderer>
