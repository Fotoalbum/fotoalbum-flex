<?xml version="1.0" encoding="utf-8"?>
<s:ItemRenderer xmlns:fx="http://ns.adobe.com/mxml/2009" 
				xmlns:s="library://ns.adobe.com/flex/spark" 
				xmlns:mx="library://ns.adobe.com/flex/mx" 
				autoDrawBackground="false"
				filters="{dropShadow}"
				mouseUp="_mouseUpHandler(event)"
				width="100" height="100">
	
	<fx:Declarations>
		<s:Fade id="showEff" alphaFrom="0.0" alphaTo="1.0" />
		<s:DropShadowFilter id="dropShadow" distance="2" color="0" alpha=".6" angle="45" blurX="5" blurY="5" />
	</fx:Declarations>
	
	<fx:Script>
		<![CDATA[
			import classes.Singleton;
			import classes.photoclass;
			
			import events.selectPhotoEvent;
			
			import fox.photo.ExifExtractor;
			import fox.photo.jpeg.Exif;
			
			import mx.collections.ArrayCollection;
			import mx.collections.XMLListCollection;
			import mx.controls.Alert;
			import mx.core.FlexGlobals;
			import mx.graphics.BitmapScaleMode;
			import mx.graphics.BitmapSmoothingQuality;
			
			import org.osmf.layout.ScaleMode;
			
			import spark.components.Image;
			[Bindable] public var singleton:Singleton = Singleton.getInstance();
			override public function set data(value:Object):void {
				
				super.data = value; // set the Item Renderer's data object
				
				_creationCompleteHandler();
				
			}
			
			public function _creationCompleteHandler():void
			{
				
				spriteSelection.graphics.clear();
			
				if (data) {
					
					//Check if this one is selected?
					var selected:Boolean = false;
					var excist:Boolean = false;
					for (var x:int=0; x < FlexGlobals.topLevelApplication.menuside.background_selected.length; x++) {
						if (FlexGlobals.topLevelApplication.menuside.background_selected.getItemAt(x).id == data.id) {
							if (FlexGlobals.topLevelApplication.menuside.background_selected.getItemAt(x).used) {
								excist = true;
							} else {
								selected = true;
							}
							break;
						}
					}
					
					if (excist) {
						
						spriteSelection.graphics.beginFill(0x90ff6e, .7);
						spriteSelection.graphics.drawRect(0, 0, this.width, this.height);
						spriteSelection.graphics.endFill();
						
						img.alpha = .6;
						
						this.enabled = false;
						
					} else {
						
						if (selected) {
							spriteSelection.graphics.beginFill(singleton.baseColor, 1);
							spriteSelection.graphics.drawRect(0, 0, this.width, this.height);
							spriteSelection.graphics.endFill();
						} else {
							spriteSelection.graphics.beginFill(0xdddddd, 1);
							spriteSelection.graphics.drawRect(0, 0, this.width, this.height);
							spriteSelection.graphics.endFill();
						}
					
						this.enabled = true;
						img.alpha = 1;
						
					}
						
					var request:URLRequest = new URLRequest(singleton.assets_url + data.thumb_url);
					var context:LoaderContext = new LoaderContext();
					context.checkPolicyFile = true;
					if (Capabilities.isDebugger == false) {
						context.securityDomain = SecurityDomain.currentDomain;
						context.applicationDomain = ApplicationDomain.currentDomain;
					}
					
					var loader:Loader = new Loader();
					loader.contentLoaderInfo.addEventListener(Event.COMPLETE, onComplete);
					loader.contentLoaderInfo.addEventListener(IOErrorEvent.IO_ERROR, onError);
					loader.load(request, context);
						
				}
					
			}
			
			private function onComplete(e:Event):void 
			{
				
				img.source = e.target.content;
				
			}
			
			private function onError(e:Event):void {
				trace(e);
			}
			
			private function onIOError(error:IOErrorEvent):void {
				trace(error.text);
			}
			
			protected function _mouseUpHandler(event:MouseEvent):void
			{
			
				var selected:Boolean = false;
				spriteSelection.graphics.clear();
				
				for (var x:int=0; x < FlexGlobals.topLevelApplication.menuside.background_selected.length; x++) {
					
					if (FlexGlobals.topLevelApplication.menuside.background_selected.getItemAt(x).id == data.id) {
						
						//Remove it from the selection
						selected = true;
						
						FlexGlobals.topLevelApplication.menuside.background_selected.removeItemAt(x);
						FlexGlobals.topLevelApplication.menuside.background_selected.refresh();
						
						spriteSelection.graphics.beginFill(0xdddddd, 1);
						spriteSelection.graphics.drawRect(0, 0, this.width, this.height);
						spriteSelection.graphics.endFill();
						break;
					}
					
				}
				
				if (!selected) {
					
					//Select it 
					FlexGlobals.topLevelApplication.menuside.background_selected.addItem(data);
					spriteSelection.graphics.beginFill(singleton.baseColor, 1);
					spriteSelection.graphics.drawRect(0, 0, this.width, this.height);
					spriteSelection.graphics.endFill();
				}
				
				parentDocument.parentDocument.explodedView.removeAllElements();
				parentDocument.parentDocument.explodedView.visible = false;
				
			}

			
			protected function img_rollOverHandler(event:MouseEvent):void
			{
				
				/*
				var bitmap:Bitmap = new Bitmap(img.bitmapData.clone());
				var clone:Image = new Image();
				clone.scaleMode = BitmapScaleMode.ZOOM;
				clone.width = 300;
				clone.height = 300;
				clone.source = bitmap;
				clone.mouseEnabled = false;
				clone.cacheAsBitmap = true;
				clone.smooth = true;
				clone.filters = [FlexGlobals.topLevelApplication.dropShadow];
				clone.validateNow();
				
				parentDocument.parentDocument.explodedView.removeAllElements();
				parentDocument.parentDocument.explodedView.addElement(clone);
				parentDocument.parentDocument.explodedView.x = parentDocument.parentDocument.mouseX + 10;
				parentDocument.parentDocument.explodedView.y = parentDocument.parentDocument.mouseY + 10;
				
				if ((parentDocument.parentDocument.explodedView.x + 310) > parentDocument.parentDocument.width) {
					parentDocument.parentDocument.explodedView.x = parentDocument.parentDocument.mouseX - 310;
				}
				if ((parentDocument.parentDocument.explodedView.y + 310) > parentDocument.parentDocument.height) {
					parentDocument.parentDocument.explodedView.y = parentDocument.parentDocument.mouseY - 310;
				}
				
				parentDocument.parentDocument.explodedView.visible = true;
				*/
			}
			
			protected function img_rollOutHandler(event:MouseEvent):void
			{
				/*
				parentDocument.parentDocument.explodedView.removeAllElements();
				parentDocument.parentDocument.explodedView.visible = false;
				*/
			}
			
		]]>
	</fx:Script>
	
	<s:SpriteVisualElement id="spriteSelection" width="100%" height="100%" />
		
	<s:Image id="img" width="90" height="90" cacheAsBitmap="true"
				   horizontalAlign="center" horizontalCenter="0"
				   verticalCenter="0" scaleMode="zoom"
				   rollOver="img_rollOverHandler(event)"
				   rollOut="img_rollOutHandler(event)"
				   verticalAlign="middle" top="2"/>
	
	<s:SWFLoader source="@Embed('assets/iconset/vinkje.swf')" width="25" height="25" scaleContent="true"
				 horizontalAlign="center" verticalAlign="middle" right="-7" bottom="-7" 
				 visible="{!this.enabled}" />
	
</s:ItemRenderer>
